

How did viewing a diff between two versions of a file help you see the bug that was introduced?

- I didn't have to check the whole code, just the modifications since the latest version.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

- Have an idea of the time it takes to develop certain features.

- control the debugging timings.

- find out repeated time-consuming mistakes.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

- if you commit manually, you only commit when the changes are relevant.

- if you commit automatically, there are less possibilities you forget about it or ignore it.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

- Because the files in git are expected to be interelated, whereas in google docs are meant to be somehow independent.


How can you use the commands git log and git diff to view the history of files?

- With git log, is possible to check all the commitments, with git diff, to compare them with the previous one to check the modifications.


How might using version control make you more confident to make changes that could break something?

Knowing is always possible to go to a previous state.